{"remainingRequest":"/Users/YIQI/Desktop/BT3103-1/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/Users/YIQI/Desktop/BT3103-1/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/YIQI/Desktop/BT3103-1/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/YIQI/Desktop/BT3103-1/src/components/AddItem.vue?vue&type=template&id=bc0ad158&scoped=true&","dependencies":[{"path":"/Users/YIQI/Desktop/BT3103-1/src/components/AddItem.vue","mtime":1584896620383},{"path":"/Users/YIQI/Desktop/BT3103-1/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/YIQI/Desktop/BT3103-1/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/Users/YIQI/Desktop/BT3103-1/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/YIQI/Desktop/BT3103-1/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}